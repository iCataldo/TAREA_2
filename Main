import java.util.ArrayList;
abstract class Moneda{
    public Moneda() {
    }
    public Moneda getSerie(){
        return this;
    }
    public abstract int getValor();
}
class Moneda100 extends Moneda {
    public Moneda100() {
        super();
    }

    public int getValor() {
        return 100;
    }
}
class Moneda500 extends Moneda{
    public Moneda500(){
        super();
    }
    public int getValor() {
        return 500;
    }
}
class Moneda1000 extends Moneda{
    public Moneda1000(){
        super();
    }
    public int getValor() {
        return 1000;
    }
}
class Moneda1500 extends Moneda{
    public Moneda1500(){
        super();
    }
    public int getValor() {
        return 1500;
    }
}
abstract class Bebida {
    private int serie;

    public Bebida(int n) {
        serie = n;
    }

    public int getSerie() {
        return serie;
    }

    public abstract String beber();
}
class CocaCola extends Bebida{

    public CocaCola(int n) {
        super(n);
    }
    public String beber(){
        return "cocacola";
    }
}
class Sprite extends Bebida{
    public Sprite(int n) {
        super(n);
    }
    public String beber(){
        return "sprite";
    }
}
class Comprador {

    private String sonido;
    private int vuelto = 0;

    public Comprador(Moneda m, int cual, Expendedor exp) {
        Bebida bebida = exp.comprarBebida(m, cual);
        if (bebida == null) {
            this.sonido = "null";
            if (m != null) {
                for (int i = 0; i < m.getValor(); i = i + 100) {
                    exp.getVuelto();
                }
                vuelto = m.getValor();
            }
        } else {
            this.sonido = bebida.beber();
            for (int i = 0; i < m.getValor(); i = i + 100) {
                if (exp.getVuelto() != null) {
                    vuelto = vuelto + 100;
                }
            }
        }

    }

    public int cuantoVuelto() {
        return vuelto;
    }

    public String queBebiste() {
        return sonido;

    }
}
class Deposito {
    private ArrayList<Bebida> var;

    public Deposito() {
        var = new ArrayList();
    }

    public void addBebida(Bebida bebida) {
        var.add(bebida);
    }

    public Bebida getBebida() {
        if (var.size() == 0) {
            return null;
        }
        Bebida bebida = var.get(0);
        var.remove(0);
        return bebida;
    }
}
class DepositoM {
    private ArrayList<Moneda> ver;

    public DepositoM() {
        ver = new ArrayList();
    }

    public void addMoneda() {
        Moneda mon = new Moneda100();
        ver.add(mon);
    }

    public Moneda getMoneda() {
        if (ver.size() == 0) {
            return null;
        } else {
            Moneda moneda = ver.get(0);
            ver.remove(0);
            return moneda;
        }
    }
}
class Expendedor {
    public static final int COCA = 1;
    public static final int SPRITE = 2;
    private Deposito coca;
    private Deposito sprite;
    private DepositoM monVu;
    private int precio;

    public Expendedor(int n, int precio) {
        this.precio = precio;
        monVu = new DepositoM();
        coca = new Deposito();
        sprite = new Deposito();
        for (int i = 0; i < n; i++) {
            Bebida cocacola = new CocaCola(100 + i);
            coca.addBebida(cocacola);
            Bebida sprites = new Sprite(200 + i);
            sprite.addBebida(sprites);
        }

    }

    public Bebida comprarBebida(Moneda moneda, int tipo) {
        int cobro = 0;
        if (moneda == null) {
            return null;
        }

        if (precio <= moneda.getValor()) {


            if (1 == tipo) {
                Bebida beb = coca.getBebida();
                if (beb != null) {
                    cobro = precio;
                }
                int vuelto = moneda.getValor() - cobro;
                for (int i = 0; i < vuelto; i = i + 100) {
                    monVu.addMoneda();
                }
                return beb;
            }
            if (2 == tipo) {
                Bebida beb = sprite.getBebida();
                if (beb != null) {
                    cobro = precio;
                }
                int vuelto = moneda.getValor() - cobro;
                for (int i = 0; i < vuelto; i = i + 100) {
                    monVu.addMoneda();
                }
                return beb;
            }
        }
        int vuelto = moneda.getValor() - cobro;
        for (int i = 0; i < vuelto; i = i + 100) {
            monVu.addMoneda();
        }
        return null;
    }

    public Moneda getVuelto() {
        return monVu.getMoneda();
    }

}

public class Main {
    public static void main(String[] args) {
        Expendedor exp = new Expendedor(3,1000);
        Moneda m = null;
        Comprador c=null;
                m = new Moneda500();
        c = new Comprador(m,661,exp);
        System.out.println(c.queBebiste()+", "+c.cuantoVuelto());
                m = new Moneda500();
        c = new Comprador(m,661,exp);
        System.out.println(c.queBebiste()+", "+c.cuantoVuelto());
                m = new Moneda500();
        c = new Comprador(m,661,exp);
        System.out.println(c.queBebiste()+", "+c.cuantoVuelto());
                m = null;
        c = new Comprador(m,Expendedor.SPRITE,exp);
        System.out.println(c.queBebiste()+", "+c.cuantoVuelto());
                m = null;
        c = new Comprador(m,Expendedor.SPRITE,exp);
        System.out.println(c.queBebiste()+", "+c.cuantoVuelto());
                m = null;
        c = new Comprador(m,Expendedor.SPRITE,exp);
        System.out.println(c.queBebiste()+", "+c.cuantoVuelto());
                m = new Moneda1000();
        c = new Comprador(m,Expendedor.COCA,exp);
        System.out.println(c.queBebiste()+", "+c.cuantoVuelto());
        m = new Moneda1000();
        c = new Comprador(m,Expendedor.COCA,exp);
        System.out.println(c.queBebiste()+", "+c.cuantoVuelto());
        m = new Moneda1000();
        c = new Comprador(m,Expendedor.COCA,exp);
        System.out.println(c.queBebiste()+", "+c.cuantoVuelto());
                m = new Moneda500();
        c = new Comprador(m,Expendedor.SPRITE,exp);
        System.out.println(c.queBebiste()+", "+c.cuantoVuelto());
                m = new Moneda500();
        c = new Comprador(m,Expendedor.SPRITE,exp);
        System.out.println(c.queBebiste()+", "+c.cuantoVuelto());
                m = new Moneda500();
        c = new Comprador(m,Expendedor.SPRITE,exp);
        System.out.println(c.queBebiste()+", "+c.cuantoVuelto());
                m = new Moneda1500();
        c = new Comprador(m,Expendedor.SPRITE,exp);
        System.out.println(c.queBebiste()+", "+c.cuantoVuelto());
        m = new Moneda1500();
        c = new Comprador(m,Expendedor.SPRITE,exp);
        System.out.println(c.queBebiste()+", "+c.cuantoVuelto());
        m = new Moneda1500();
        c = new Comprador(m,Expendedor.SPRITE,exp);
        System.out.println(c.queBebiste()+", "+c.cuantoVuelto());
                m = new Moneda1500();
        c = new Comprador(m,Expendedor.SPRITE,exp);
        System.out.println(c.queBebiste()+", "+c.cuantoVuelto());
                m = new Moneda1500();
        c = new Comprador(m,Expendedor.SPRITE,exp);
        System.out.println(c.queBebiste()+", "+c.cuantoVuelto());
                m = new Moneda1500();
        c = new Comprador(m,Expendedor.SPRITE,exp);
        System.out.println(c.queBebiste()+", "+c.cuantoVuelto());
    }
}
